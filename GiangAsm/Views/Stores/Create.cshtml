@model GiangAsm.Models.Store
@using Microsoft.AspNetCore.Identity
@using GiangAsm.Areas.Identity.Data

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Store</h4>
<hr />
@*if(SignInManager.IsSignedIn(User))
{*@


<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Slogan" class="control-label"></label>
                <input asp-for="Slogan" class="form-control" />
                <span asp-validation-for="Slogan" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <input asp-for="UserId" class ="form-control" value="@UserManager.GetUserId(User)" readonly/>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</di>
@*}*@
@*else
{
    <h1>No account</h1>
}*@

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
